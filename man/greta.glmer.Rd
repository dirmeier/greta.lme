% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glmer.R
\name{greta.glmer}
\alias{greta.glmer}
\title{Initialize the linear predictor for generalized linear effect models}
\usage{
greta.glmer(formula, data, prior_intercept = NULL,
  prior_coefficients = NULL, prior_random_effects = NULL)
}
\arguments{
\item{formula}{an \code{lme4}-style formula}

\item{data}{the data set containing the variables described in
\code{formula}}

\item{prior_intercept}{a \code{\link{greta_array}} random variable
that specifies the prior for the intercept \eqn{\beta_0} for the
fixed effects design
matrix. If \code{NULL}, the distribution for the intercept is chosen as
\deqn{p(\beta) ∝ const.} The intercept prior
needs to have dimension 1.}

\item{prior_coefficients}{a \code{\link{greta_array}} random
variable that specifies the prior for the coefficients\eqn{\beta} for the
fixed effects
design matrix. If \code{NULL}, the distribution for the coefficients is
chosen as \deqn{p(\beta_i) ~ N(0, \sigma),} and
 \deqn{p(\sigma) ~ Half-Cauchy(0, ∞).}
The coefficients prior
need to have the same dimensionalty as the number of columns of
your fixed effects design matrix (without the intercept).}

\item{prior_random_effects}{a \code{greta_array} random
variable that specifies the prior for the random effects \eqn{\gamma} for
the random effects design matrix. If \code{NULL}, the distribution for the
 random effects is chosen as
 \deqn{p(\gamma) ~ N(0, \tau),} and
 \deqn{p(\tau) ~ Inv-Wishart}
If \code{prior_random_effects} is provided
it needs to have the same dimensionalty as the
number of columns of \eqn{Z}
random effect design matrix. These are generally not trivial to construct.
Calling \code{glFormula(formula, data)} creates the specified
random effects matrix \eqn{Z}. From this the dimensionality of
\code{prior_random_effects} can be inferred.}
}
\value{
Returns a list of class \code{greta.glmer} with the following
 elements:
\item{predictor }{ the linear predictor \eqn{\eta}}
\item{X }{ the fixed effects design matrix}
\item{x.eta }{ the linear predictor \eqn{X\beta}}
\item{coef }{ the prior for the coefficients \eqn{\beta}}
\item{Z }{ the random effects design matrix}
\item{z.eta }{ the linear predictor \eqn{Z\gamma}}
\item{gamma }{ the prior for the random effects \eqn{\gamma}}
\item{Ztlist }{ a list of random effect terms used for initializing \eqn{\gamma}}
\item{grp.vars }{ the variables used for grouping}
\item{call }{ the function call used}
\item{formula }{ the formula used}
}
\description{
\code{greta.glmer} creates the linear predictor $eta$ required
for fitting generalized linear mixed models. The linear predictor has the
form: \deqn{\eta = X \beta + Z \gamma,}
where \eqn{X} is the fixed effects design matrix, \eqn{\beta} the fixed
effects, \eqn{Z} the random effects design matrix and \eqn{\gamma} the
random effects.
}
\examples{
# create a random intercept model
greta.glmer(Sepal.Length ~ Sepal.Width + (1 | Species), iris)

# creates a random slope model
greta.glmer(Sepal.Length ~ Sepal.Width + (Sepal.Width | Species), iris)

# creates a random slope model with multiple random effect terms
greta.glmer(Sepal.Length ~ Sepal.Width + (Sepal.Width | Species) + (Petal.Width | Species),
            iris)

# creates a random slope model with strong regularizing prior
greta.glmer(Sepal.Length ~ Sepal.Width + (Sepal.Width | Species),
           iris,
           prior_random_effects = greta::normal(0, 1, dim=3))

# creates a random slope model with flat coefficient prior
greta.glmer(Sepal.Length ~ Sepal.Width + (Sepal.Width | Species),
           iris,
           prior_coefficients = greta::variable(dim=1))

# creates a random slope model with normal intercept prior
greta.glmer(Sepal.Length ~ Sepal.Width + (Sepal.Width | Species),
           iris,
           prior_intercept = greta::normal(0, 1))

}
